/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
}

test {
    useJUnitPlatform {
        println "##########################################################"
        println "   Starting tests for selenium-concepts project "
        println "##########################################################"
    }

    dependsOn 'cleanTest' // Always run tests, even when nothing changed.

    testLogging {
        // Log result for each test as they run
        events "passed", "skipped", "failed", "standardOut", "standardError"

        exceptionFormat = 'full' // For test failures, show assertion on why it failed instead of just the line number of failure
        showStandardStreams = true // Show stdout and stderr of tests on console
    }

    // Show summary of test run
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }
}